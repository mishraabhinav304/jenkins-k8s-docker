# apiVersion: v1
# kind: Service
# metadata:
#   name: react-app-service
# spec:
#   selector:
#     app: react-app  # This should match the label in the deployment
#   ports:
#     - port: 80         # The port exposed by the service
#       targetPort: 3000  # The port inside the container where the React app is running
#       nodePort: 32468   # The external port on the node to access the service
#   type: NodePort       # Expose the service via NodePort to allow external access

# apiVersion: v1
# kind: Service
# metadata:
#   name: react-app-service
#   labels:
#     app: react-app
# spec:
#   type: ClusterIP  # You can change this to NodePort or LoadBalancer if needed
#   ports:
#     - port: 80
#       targetPort: 80
#       protocol: TCP
#   selector:
#     app: react-app  # This should match the labels of the pods you want this service to target


apiVersion: v1
kind: Service
metadata:
  name: react-app-service
  labels:
    app: react-app
spec:
  type: NodePort  # Changed from ClusterIP to NodePort
  ports:
    - port: 80
      targetPort: 3000  # Your application is serving content on port 3000 inside the container
      nodePort: 31000   # Optionally specify the nodePort or let Kubernetes choose for you
      protocol: TCP
  selector:
    app: react-app


